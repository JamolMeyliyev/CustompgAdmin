@page "/writequery"
@using Blazored.LocalStorage;
@using CustompgAdmin.Blazor.Models;
@inject HttpClient _httpClient;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService Storage;
<h3>Query Tool</h3>

<form method="post" @onsubmit="(() =>Query())">

    <InputText @bind-Value="query.Query" />
    <button type="submit">Submit</button>
</form>


@code {
    QueryForString query = new QueryForString();

    public async Task Query()
    {
        string[] strings = query.Query.Split(' ');

        query.DatabaseId = Convert.ToInt32(await Storage.GetItemAsStringAsync("databaseId"));
        if (strings[0].ToLower() == "select")
        {
            await Storage.SetItemAsStringAsync("databaseId", query.DatabaseId.ToString());
            await Storage.SetItemAsStringAsync("query",query.Query);
            NavigationManager.NavigateTo("/query-data");
        }
        else
        {
            await _httpClient.PostAsJsonAsync<dynamic>("/api/Databases/write-query", query);
            NavigationManager.NavigateTo("/databases");
        }
       
    }
}