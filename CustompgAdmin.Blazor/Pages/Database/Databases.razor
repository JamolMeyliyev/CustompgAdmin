@page "/databases"
@using CustompgAdmin.UI.Models.ReturnModel;
@using Blazored.LocalStorage;
@inject HttpClient _httpClient;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService Storage;
<h3>Databases</h3>

<table class="table">
    <thead>
        <tr>


            <th scope="col">Name</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>

        @for (int i = 0; i < databases.Count; i++)
        {
            var database = databases[i];

            <tr>
                <td>@database.Name</td>
               
                <td><button  type="button" class="btn btn-primary" @onclick="(()=> ToTables(database.Id))">View Tables</button></td>
                <td><button  type="button" class="btn btn-primary" @onclick="(()=> ToWriteQuery(database.Id))">Create Query</button></td>
                <td><button  type="button" class="btn btn-danger" @onclick="(()=> ToDeleteDatabase(database.Id))">Delete</button></td>
             
            </tr>
        }

    </tbody>
</table>


<td><button type="button" class="btn btn-danger" @onclick="(()=> ToCreateDatabase())">Create Database</button></td>
@code {
    List<DatabaseReturnModel> databases = new List<DatabaseReturnModel>();
    int id;
    protected override async Task OnInitializedAsync()
    {
        databases = (await _httpClient.GetFromJsonAsync<List<DatabaseReturnModel>>("/api/Databases")) ?? new List<DatabaseReturnModel>();
    }


    public async Task ToDeleteDatabase(int id)
    {
        await Storage.SetItemAsStringAsync("databaseId",id.ToString());

        NavigationManager.NavigateTo("/deletedatabase");

    }

    public async Task ToTables(int id)
    {
        await Storage.SetItemAsStringAsync("databaseId",id.ToString());
        NavigationManager.NavigateTo("/tables");
    }
    public async Task ToWriteQuery(int id)
    {
        await Storage.SetItemAsStringAsync("databaseId", id.ToString());
        NavigationManager.NavigateTo("/writequery");
    }
    public async Task ToCreateDatabase()
    {
        NavigationManager.NavigateTo("/createdatabase");
    }
}
