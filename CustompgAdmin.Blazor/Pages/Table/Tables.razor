@page "/tables"
@using CustompgAdmin.UI.Models.ReturnModel;
@using Blazored.LocalStorage;
@inject HttpClient _httpClient;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService Storage;

<h3>Tables</h3>

<table class="table">
    <thead>
        <tr>


            <th scope="col">Name</th>
            <th scope="col"></th>
            
        </tr>
    </thead>
    <tbody>

        @for (int i = 0; i < tables.Count; i++)
        {
            var table = tables[i];

            <tr>
                <td>@table.Name</td>
                @if(table.Columns is not null)
                {
                    <td>@table.Columns.Count()</td>
                }
               
                
                 
            </tr>
            
        }

    </tbody>
</table>
@code {
    List<TableReturnModel>? tables = new List<TableReturnModel>();
    int id;
    protected override async Task OnInitializedAsync()
    {
        id = Convert.ToInt32(await Storage.GetItemAsStringAsync("databaseId"));
        tables = (await _httpClient.GetFromJsonAsync<List<TableReturnModel>>($"/api/databases/{id}/Tables")) ?? new List<TableReturnModel>();

    }


    

   
}

